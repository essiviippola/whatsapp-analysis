import pandas as pd
import numpy as np
import regex
import emoji

def find_emojis(text):
    EMOJIPATTERN = r'\X'
    emoji_list = []
    data = regex.findall(EMOJIPATTERN, text)
    for word in data:
        if any(char in emoji.UNICODE_EMOJI for char in word):
            emoji_list.append(word)
    return emoji_list

def find_links(text):
    URLPATTERN = r'(https?://\S+)'
    link_list = []
    data = regex.findall(URLPATTERN, text)
    for word in data:
            link_list.append(word)
    return link_list

def preprocess_data(df):
    '''Pre-process Whatsapp dataframe'''

    # Remove rows where author is None, i.e. messages generated by Whatsapp
    df = df.dropna(subset = ['author']).reset_index(drop = True)

    # Only include the first three letters of the first name of each author for privacy reasons
    df['author'] = df['author'].str[:3].str.upper()

    # Add 1 to column messages to enable easier summarization
    df['message_count'] = 1

    # Add a marker for media messages
    df['media_count'] = (df['message'] == '<Media jÃ¤tettiin pois>').astype(int)

    # Number of letters and words in a message, except for media messages
    df['letter_count'] = df['message'].apply(lambda s: len(s))
    df.loc[df['media_count'] > 0, 'letter_count'] = None
    df['word_count'] = df['message'].apply(lambda s: len(s.split(' ')))
    df.loc[df['media_count'] > 0, 'word_count'] = None

    # Add emojis and the number of emojis to dataframe
    df['emoji'] = df['message'].apply(find_emojis)
    df['emoji_count'] = df['emoji'].str.len()
    df.loc[df['media_count'] > 0, 'emoji_count'] = None
    df['message_with_emoji'] = df['emoji_count'] > 0

    # Add links and the number of links
    df['link'] = df['message'].apply(find_links)
    df['link_count'] = df['link'].str.len()
    df['message_with_link'] = df['link_count'] > 0

    # Add weekday
    weekdays = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday']
    df['weekday'] = df['date'].dt.weekday.apply(lambda x: weekdays[x])
    df['weekend'] = df['weekday'].isin(['Saturday', 'Sunday'])

    # Add hour and hour group
    df['hour'] = df['time'].str.split('.').str[0].astype(int)

    conditions = [
        (df['hour'] < 6), 
        ((df['hour'] >= 6) & (df['hour'] < 12)),
        ((df['hour'] >= 12) & (df['hour'] < 18)),
        (df['hour'] >= 18)]
    values = ['0-5', '6-11', '12-17', '18-23']
    df['hour_group'] = np.select(conditions, values)

    return df